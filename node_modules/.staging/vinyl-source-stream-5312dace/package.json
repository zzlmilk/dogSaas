{
  "_from": "vinyl-source-stream@^1.1.0",
  "_id": "vinyl-source-stream@1.1.0",
  "_inBundle": false,
  "_integrity": "sha1-RMvlEIIFJ53rDFZTwJSiiHk4sas=",
  "_location": "/vinyl-source-stream",
  "_phantomChildren": {
    "clone-stats": "0.0.1",
    "core-util-is": "1.0.2",
    "inherits": "2.0.3",
    "xtend": "4.0.1"
  },
  "_requested": {
    "escapedName": "vinyl-source-stream",
    "fetchSpec": "^1.1.0",
    "name": "vinyl-source-stream",
    "raw": "vinyl-source-stream@^1.1.0",
    "rawSpec": "^1.1.0",
    "registry": true,
    "saveSpec": null,
    "type": "range"
  },
  "_requiredBy": [
    "#DEV:/",
    "#USER"
  ],
  "_resolved": "https://registry.npmjs.org/vinyl-source-stream/-/vinyl-source-stream-1.1.0.tgz",
  "_shasum": "44cbe5108205279deb0c5653c094a2887938b1ab",
  "_spec": "vinyl-source-stream@^1.1.0",
  "_where": "/Users/zhouzhiling/Desktop/dogSAAS",
  "author": {
    "email": "hughskennedy@gmail.com",
    "name": "Hugh Kennedy",
    "url": "http://hughsk.io/"
  },
  "browser": "index.js",
  "bugs": {
    "url": "https://github.com/hughsk/vinyl-source-stream/issues"
  },
  "bundleDependencies": false,
  "dependencies": {
    "through2": "^0.6.1",
    "vinyl": "^0.4.3"
  },
  "deprecated": false,
  "description": "Use conventional text streams at the start of your gulp or vinyl pipelines",
  "devDependencies": {
    "gulp": "~3.3.0",
    "gulp-rename": "~0.2.1",
    "tape": "~2.3.2",
    "vinyl-map": "0.0.1"
  },
  "homepage": "https://github.com/hughsk/vinyl-source-stream",
  "keywords": [
    "classic",
    "gulp",
    "gulpfriendly",
    "stream",
    "string",
    "text",
    "vanilla",
    "vinyl"
  ],
  "license": "MIT",
  "main": "index.js",
  "name": "vinyl-source-stream",
  "optionalDependencies": {},
  "readme": "# vinyl-source-stream [![Flattr this!](https://api.flattr.com/button/flattr-badge-large.png)](https://flattr.com/submit/auto?user_id=hughskennedy&url=http://github.com/hughsk/vinyl-source-stream&title=vinyl-source-stream&description=hughsk/vinyl-source-stream%20on%20GitHub&language=en_GB&tags=flattr,github,javascript&category=software)[![experimental](http://hughsk.github.io/stability-badges/dist/experimental.svg)](http://github.com/hughsk/stability-badges) #\r\n\r\nUse conventional text streams at the start of your\r\n[gulp](http://github.com/gulpjs/gulp) or\r\n[vinyl](http://github.com/wearefractal/vinyl) pipelines, making for nicer\r\ninteroperability with the existing npm stream ecosystem.\r\n\r\nTake, for example, [browserify](http://browserify.org/). There's the\r\n[gulp-browserify](https://github.com/deepak1556/gulp-browserify) and\r\n[gulpify](https://github.com/hughsk/gulpify) plugins, which you can use in\r\ncombination with gulp to get browserify working in your build. Unfortunately,\r\nthese plugins come with additional overhead: an extra GitHub repository, npm\r\nmodule, maintainer, tests, semantics, etc. It's much simpler\r\nin this case to use the original module directly where you can, which is what\r\n`vinyl-source-stream` handles for you.\r\n\r\n## Usage ##\r\n\r\n[![vinyl-source-stream](https://nodei.co/npm/vinyl-source-stream.png?mini=true)](https://nodei.co/npm/vinyl-source-stream)\r\n\r\nOur previous example, browserify, has a streaming API for its output bundles\r\nwhich you can use directly. This module is just a bridge that makes it\r\nsimple to use conventional text streams such as this in combination with gulp.\r\nHere's an example of using `vinyl-source-stream` and `browserify`, compared to\r\nusing `gulpify`:\r\n\r\n``` javascript\r\nvar source = require('vinyl-source-stream')\r\nvar streamify = require('gulp-streamify')\r\nvar browserify = require('browserify')\r\nvar uglify = require('gulp-uglify')\r\nvar gulpify = require('gulpify')\r\nvar rename = require('gulp-rename')\r\nvar gulp = require('gulp')\r\n\r\n// using gulpify:\r\ngulp.task('gulpify', function() {\r\n  gulp.src('index.js')\r\n    .pipe(gulpify())\r\n    .pipe(uglify())\r\n    .pipe(rename('bundle.js'))\r\n    .pipe(gulp.dest('./'))\r\n})\r\n\r\n// using vinyl-source-stream:\r\ngulp.task('browserify', function() {\r\n  var bundleStream = browserify('./index.js').bundle()\r\n\r\n  bundleStream\r\n    .pipe(source('index.js'))\r\n    .pipe(streamify(uglify()))\r\n    .pipe(rename('bundle.js'))\r\n    .pipe(gulp.dest('./'))\r\n})\r\n```\r\n\r\nNot all that different, really! The nice thing here is that you're getting the\r\nup-to-date browserify API and don't have to worry about the plugin's available\r\nfunctionality. Of course, these same benefits apply for any readable text\r\nstream you can find on npm.\r\n\r\n## API ##\r\n\r\n### `stream = sourceStream([filename])` ###\r\n\r\nCreates a through stream which takes text as input, and emits a single\r\nvinyl file instance for streams down the pipeline to consume.\r\n\r\n`filename` is a \"pretend\" filename to use for your file, which some streams\r\nmight use to determine various factors such as the final filename of your file.\r\nIt should be a string, and though recommended, using this argument is optional.\r\n\r\n## License ##\r\n\r\nMIT. See [LICENSE.md](http://github.com/hughsk/vinyl-source-stream/blob/master/LICENSE.md) for details.\r\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/hughsk/vinyl-source-stream.git"
  },
  "scripts": {
    "test": "node test"
  },
  "version": "1.1.0"
}
